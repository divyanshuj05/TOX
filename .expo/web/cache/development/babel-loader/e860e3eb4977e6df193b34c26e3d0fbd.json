{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3;\n\nimport React, { useContext } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport styled from \"styled-components/native\";\nimport { ActivityIndicator, Colors } from \"react-native-paper\";\nimport { SafeArea } from \"../../../components/utility/safe-area.component\";\nimport { Spacer } from \"../../../components/spacer/spacer.component\";\nimport { RestaurantsContext } from \"../../../services/restaurants/restaurants.context\";\nimport { Search } from \"../components/search.component\";\nimport { RestaurantInfoCard } from \"../components/restaurant-info-card.component\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RestaurantList = styled(FlatList).attrs({\n  contentContainerStyle: {\n    padding: 16\n  }\n})(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\"])));\nvar Loading = styled(ActivityIndicator)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin-left: -25px;\\n\"])));\nvar LoadingContainer = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n\"])));\nexport var RestaurantsScreen = function RestaurantsScreen() {\n  var _useContext = useContext(RestaurantsContext),\n      isLoading = _useContext.isLoading,\n      restaurants = _useContext.restaurants;\n\n  return _jsxs(SafeArea, {\n    children: [isLoading && _jsx(LoadingContainer, {\n      children: _jsx(Loading, {\n        size: 50,\n        animating: true,\n        color: Colors.blue300\n      })\n    }), _jsx(Search, {}), _jsx(RestaurantList, {\n      data: restaurants,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(Spacer, {\n          position: \"bottom\",\n          size: \"large\",\n          children: _jsx(RestaurantInfoCard, {\n            restaurant: item\n          })\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.name;\n      }\n    })]\n  });\n};","map":{"version":3,"names":["React","useContext","styled","ActivityIndicator","Colors","SafeArea","Spacer","RestaurantsContext","Search","RestaurantInfoCard","RestaurantList","FlatList","attrs","contentContainerStyle","padding","Loading","LoadingContainer","View","RestaurantsScreen","isLoading","restaurants","blue300","item","name"],"sources":["C:/react learn/MealsToGo/src/features/restaurants/screens/restaurants.screen.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { FlatList } from \"react-native\";\nimport styled from \"styled-components/native\";\nimport { ActivityIndicator, Colors } from \"react-native-paper\";\n\nimport { SafeArea } from \"../../../components/utility/safe-area.component\";\nimport { Spacer } from \"../../../components/spacer/spacer.component\";\n\nimport { RestaurantsContext } from \"../../../services/restaurants/restaurants.context\";\n\nimport { Search } from \"../components/search.component\";\nimport { RestaurantInfoCard } from \"../components/restaurant-info-card.component\";\n\nconst RestaurantList = styled(FlatList).attrs({\n  contentContainerStyle: {\n    padding: 16,\n  },\n})``;\n\nconst Loading = styled(ActivityIndicator)`\n  margin-left: -25px;\n`;\nconst LoadingContainer = styled.View`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n`;\n\nexport const RestaurantsScreen = () => {\n  const { isLoading, restaurants } = useContext(RestaurantsContext);\n  return (\n    <SafeArea>\n      {isLoading && (\n        <LoadingContainer>\n          <Loading size={50} animating={true} color={Colors.blue300} />\n        </LoadingContainer>\n      )}\n      <Search />\n      <RestaurantList\n        data={restaurants}\n        renderItem={({ item }) => {\n          return (\n            <Spacer position=\"bottom\" size=\"large\">\n              <RestaurantInfoCard restaurant={item} />\n            </Spacer>\n          );\n        }}\n        keyExtractor={(item) => item.name}\n      />\n    </SafeArea>\n  );\n};\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,iBAAT,EAA4BC,MAA5B,QAA0C,oBAA1C;AAEA,SAASC,QAAT;AACA,SAASC,MAAT;AAEA,SAASC,kBAAT;AAEA,SAASC,MAAT;AACA,SAASC,kBAAT;;;AAEA,IAAMC,cAAc,GAAGR,MAAM,CAACS,QAAD,CAAN,CAAiBC,KAAjB,CAAuB;EAC5CC,qBAAqB,EAAE;IACrBC,OAAO,EAAE;EADY;AADqB,CAAvB,CAAH,0EAApB;AAMA,IAAMC,OAAO,GAAGb,MAAM,CAACC,iBAAD,CAAT,qGAAb;AAGA,IAAMa,gBAAgB,GAAGd,MAAM,CAACe,IAAV,gIAAtB;AAMA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;EACrC,kBAAmCjB,UAAU,CAACM,kBAAD,CAA7C;EAAA,IAAQY,SAAR,eAAQA,SAAR;EAAA,IAAmBC,WAAnB,eAAmBA,WAAnB;;EACA,OACE,MAAC,QAAD;IAAA,WACGD,SAAS,IACR,KAAC,gBAAD;MAAA,UACE,KAAC,OAAD;QAAS,IAAI,EAAE,EAAf;QAAmB,SAAS,EAAE,IAA9B;QAAoC,KAAK,EAAEf,MAAM,CAACiB;MAAlD;IADF,EAFJ,EAME,KAAC,MAAD,KANF,EAOE,KAAC,cAAD;MACE,IAAI,EAAED,WADR;MAEE,UAAU,EAAE,0BAAc;QAAA,IAAXE,IAAW,QAAXA,IAAW;QACxB,OACE,KAAC,MAAD;UAAQ,QAAQ,EAAC,QAAjB;UAA0B,IAAI,EAAC,OAA/B;UAAA,UACE,KAAC,kBAAD;YAAoB,UAAU,EAAEA;UAAhC;QADF,EADF;MAKD,CARH;MASE,YAAY,EAAE,sBAACA,IAAD;QAAA,OAAUA,IAAI,CAACC,IAAf;MAAA;IAThB,EAPF;EAAA,EADF;AAqBD,CAvBM"},"metadata":{},"sourceType":"module"}